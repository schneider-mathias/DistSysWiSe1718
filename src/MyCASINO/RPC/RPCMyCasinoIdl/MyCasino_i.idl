/**--------------------------------------------------------------------------------------------------
// project:	RPCMyCasinoIdl
// file:	MyCasino_i.idl
//
// summary:	My casino i class
//
//			Copyright (c) 2018 OTH-Amberg/Weiden. All rights reserved.
//
//			Date		Developer			Change
//			28.12.2017	Mathias Schneider	Created
 *-----------------------------------------------------------------------------------------------**/

[
	uuid(BEE48EE5-830F-453C-AAE4-9B6B3F4FC270),
	version(1.0),
	pointer_default(unique)
]
interface MyCasino_i
{
	/** <summary>	A string structure for RPC. </summary> */
	typedef struct
	{
		unsigned short size;
		unsigned short len;
		[size_is(size), length_is(len)] char *str;
	}
	String_t;

	/** <summary>	my casino bet. </summary> */
	typedef struct
	{
		String_t name;
		unsigned short firstNumber;
		unsigned short secondNumber;
		double wager;
	}
	MyCasinoBet_t;

	/** <summary>	my casino transaction t. </summary> */
	typedef struct
	{
		long id;
		double resultAmount;
		double changeAmount;
	}
	MyCasinoTransaction_t;

	error_status_t login([out] unsigned long* sessionId, [in, string] char *username, [in, string] char *password, [out] short* userType);
	error_status_t logout([in] unsigned long sessionId);

	error_status_t deposit([in] unsigned long sessionId, [in, string] char *name, [in] double amountMoney);

	error_status_t bet([in] unsigned long sessionId, [in] double amountMoney, [in] short firstNumber, [in] short secondNumber);


	error_status_t calculateProfit([in] unsigned long sessionId, [in] double amountMoney, [in] short firstNumber, [in] short secondNumber, [out] double* profitForOneMatch, [out] double* profitForTwoMatches);

	/**--------------------------------------------------------------------------------------------------
	 * <summary>
	 * bet structure:
	 *  [0] - name [1] - first [2] - second [3] - amount.
	 * </summary>
	 *-----------------------------------------------------------------------------------------------**/

	error_status_t showbets([in] unsigned long sessionId, [out, size_is(, *count)] MyCasinoBet_t** bets, [in, out] unsigned long* count);


	// result numbers equal input
	error_status_t drawTest([in] unsigned long sessionId, [in] short firstNumberTest, [in] short secondNumberTest);
	error_status_t draw([in] unsigned long sessionId, [out] short* firstNumber, [out] short* secondNumber);

	/**--------------------------------------------------------------------------------------------------
	 * <summary>
	 * transaction structure: [0] - id [1] - resultAmount (=previous + change)
	 * [2] - changeAmount.
	 * </summary>
	 *-----------------------------------------------------------------------------------------------**/

	error_status_t getTransactions([in] unsigned long sessionId, [out] boolean* isFinished, [out] MyCasinoTransaction_t* transaction, [out] unsigned long* transactionType);

	// informationTypes:
	// - BetType. 

	/**--------------------------------------------------------------------------------------------------
	 * <summary>
	 * information e.g. =>bet structure: [0] - name [1] - first [2] - second [3] - amount.
	 * </summary>
	 *-----------------------------------------------------------------------------------------------**/

	error_status_t getTransactionInformation([in] unsigned long sessionId, [in] unsigned long transactionId, [out] String_t* information, [out] unsigned long* informationType);
}